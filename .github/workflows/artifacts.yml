on:
  workflow_call:
    inputs:
      sha:
        description: 'Github sha'
        required: true
        type: string
      ref:
        description: 'Github ref'
        required: true
        type: string
      tag_name:
        description: 'Github tag_name'
        type: string
      release_created:
        description: 'Github release_created'
        type: string
      pr_number:
        description: 'PR Number'
        type: string

name: build artifacts

jobs:
  # Single setup job that handles all Node.js setup and dependency installation
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    outputs:
      node_version: ${{ steps.nodeversion.outputs.content }}
    steps:
      - name: Checkout ${{ inputs.sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 1 # Shallow clone for speed

      - name: Read .node-version
        id: nodeversion
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ./.node-version

      - name: 🏛 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nodeversion.outputs.content }}
          cache: 'yarn'

      # Ensure we use the correct Yarn version
      - name: Enable Yarn
        run: corepack enable

      # Cache node_modules for faster subsequent runs
      - name: Cache node_modules
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-${{ runner.os }}-node-${{ steps.nodeversion.outputs.content }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-node-${{ steps.nodeversion.outputs.content }}-

      - name: ⚙️ Install Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      # Upload node_modules as artifact for jobs in this workflow run
      - name: Upload Dependencies Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependencies
          path: |
            node_modules
            .yarn
            .yarnrc.yml
            yarn.lock
          retention-days: 1
          compression-level: 6

  # Build job - runs in parallel with tests after setup
  build:
    runs-on: ubuntu-latest
    needs: setup
    name: Build & Lint
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 1

      - name: 🎛 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node_version }}
          cache: 'yarn'

      - name: Download Dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      # Ensure we use the correct Yarn version
      - name: Enable Yarn
        run: corepack enable

      - name: 🎨 Lint JS
        run: yarn lint

      - name: 🏗️ Build
        run: yarn build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-assets
          path: |
            package/dist
            package/tools
            package/custom-elements.json
          retention-days: 7

  # Unit tests - runs in parallel with build after setup
  test-unit:
    runs-on: ubuntu-latest
    needs: setup
    name: Unit Tests
    steps:
      - name: Checkout ${{ inputs.sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 1

      - name: 🎛 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node_version }}

      - name: Download Dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      # Ensure we use the correct Yarn version
      - name: Enable Yarn
        run: corepack enable

      - name: 🧪 Unit Tests
        run: yarn test:unit:ci

      - name: 📊 Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  # Storybook tests - runs in parallel with build and unit tests after setup
  test-storybook:
    runs-on: ubuntu-latest
    needs: setup
    name: Storybook Tests
    steps:
      - name: Checkout ${{ inputs.sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 1

      - name: 🎛 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node_version }}

      - name: Download Dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      # Ensure we use the correct Yarn version
      - name: Enable Yarn
        run: corepack enable

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🏗️ Build Storybook
        run: yarn storybook:build

      - name: 🧪 Storybook Tests
        run: yarn test:storybook:ci

      - name: 📤 Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Review job - depends on build completion, reuses build artifacts
  review:
    runs-on: ubuntu-latest
    needs: [build, test-unit, test-storybook]
    name: Review
    if: ${{ inputs.release_created != 'true' }}
    steps:
      - name: 🔍 Get Pull Request Info
        id: pr-info
        if: ${{ github.event.number != null }}
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return !pr.data?.draft && !pr.data.labels?.some(label => label.name === 'review-requested') ? "true" : "false";

      - name: 📃 Output info
        if: ${{ github.event.number != null && steps.pr-info.outputs.result == 'true' }}
        run: echo "${{ steps.pr-info.outputs.result }}"

      - name: 🧑🏼‍💻 Run Auto-Assign
        if: ${{ github.event.number != null && steps.pr-info.outputs.result == 'true' }}
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          configuration-path: '.github/auto_assign.yaml'

      - name: 🔍 Get Discord Mentions
        if: ${{ github.event.number != null && steps.pr-info.outputs.result == 'true' }}
        id: discord-mentions
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const creator = context.actor;
            const mentions = [
              { githubUser: 'dzbo', discordId: '752572450834743316' },
              { githubUser: 'richtera', discordId: '457668914198085643' },
              { githubUser: 'doubleppereira', discordId: '366621324069830669' },
              { githubUser: 'JeneaVranceanu', discordId: '785496710150357023' },
              { githubUser: 'federico-freddi', discordId: '205844357042012160' }
            ];
            const filteredMentions = mentions
              .filter(mention => mention.githubUser !== creator)
              .map(mention => `<@${mention.discordId}>`)
              .join(' ');
            return filteredMentions;

      - name: 📃 Output info
        if: ${{ github.event.number != null && steps.pr-info.outputs.result == 'true' }}
        run: echo "${{ steps.discord-mentions.outputs.result }} https://github.com/lukso-network/tools-web-components/pull/${{ github.event.number }} - ${{ github.event.pull_request.title }}"

      - name: 🧑🏼‍💻 Run Discord Webhook Action
        if: ${{ github.event.number != null && steps.pr-info.outputs.result == 'true' }}
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: '${{ steps.discord-mentions.outputs.result }} https://github.com/lukso-network/tools-web-components/pull/${{ github.event.number }} - ${{ github.event.pull_request.title }}'

      - name: ✨ Add 'review-requested' Label
        if: ${{ github.event.number != null && steps.pr-info.outputs.result == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['review-requested']
            });

  # Publish job - only runs on releases, depends on all tests passing
  publish:
    needs: [setup, build, test-unit, test-storybook]
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ inputs.release_created == 'true' }}
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 1

      - name: 🎛 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node_version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Download Dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies

      # Ensure we use the correct Yarn version
      - name: Enable Yarn
        run: corepack enable

      - name: Download Build Assets
        uses: actions/download-artifact@v4
        with:
          name: build-assets
          path: package

      - name: 📢 Publish NPM
        run: |
          echo "npmAuthToken: $NODE_AUTH_TOKEN" >> ./.yarnrc.yml
          (cd package && yarn npm publish)
          git checkout -f ./.yarnrc.yml
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
