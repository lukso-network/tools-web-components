on:
  push:
    branches:
      - main
      - patch/*
  pull_request:
    branches:
      - main
      - patch/*

env:
  PACKAGE_TYPE: node

concurrency:
  group: compile-${{ github.ref }}
  cancel-in-progress: true

name: github release
jobs:
  release-please:
    outputs:
      tag_name: ${{ steps.version.outputs.tag_name }}
      sha: ${{ steps.version.outputs.sha }}
      release_created: ${{ steps.version.outputs.release_created }}
      pr_number: ${{ steps.version.outputs.pr_number }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Please release
        if: ${{ github.event.number == '' }}
        uses: googleapis/release-please-action@v4
        id: release
        continue-on-error: true
        with:
          release-type: ${{ env.PACKAGE_TYPE }}
          target-branch: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait and retry release-please on failure
        if: ${{ github.event.number == '' && steps.release.outcome == 'failure' }}
        run: |
          echo "First attempt failed, waiting 60 seconds before retry..."
          sleep 60

      - name: Please release (retry attempt)
        if: ${{ github.event.number == '' && steps.release.outcome == 'failure' }}
        uses: googleapis/release-please-action@v4
        id: release-retry
        continue-on-error: true
        with:
          release-type: ${{ env.PACKAGE_TYPE }}
          target-branch: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait and final retry on failure
        if: ${{ github.event.number == '' && steps.release.outcome == 'failure' && steps.release-retry.outcome == 'failure' }}
        run: |
          echo "Second attempt failed, waiting 120 seconds before final retry..."
          sleep 120

      - name: Please release (final attempt)
        if: ${{ github.event.number == '' && steps.release.outcome == 'failure' && steps.release-retry.outcome == 'failure' }}
        uses: googleapis/release-please-action@v4
        id: release-final
        with:
          release-type: ${{ env.PACKAGE_TYPE }}
          target-branch: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: version
        name: Detect final version info
        run: |
          # Determine which attempt succeeded and use its outputs
          RELEASE_CREATED="${{ steps.release.outputs.release_created }}"
          RELEASE_SHA="${{ steps.release.outputs.sha }}"
          RELEASE_TAG="${{ steps.release.outputs.tag_name }}"

          if [ "${{ steps.release.outcome }}" == "failure" ] && [ "${{ steps.release-retry.outcome }}" == "success" ]; then
            RELEASE_CREATED="${{ steps.release-retry.outputs.release_created }}"
            RELEASE_SHA="${{ steps.release-retry.outputs.sha }}"
            RELEASE_TAG="${{ steps.release-retry.outputs.tag_name }}"
          elif [ "${{ steps.release.outcome }}" == "failure" ] && [ "${{ steps.release-retry.outcome }}" == "failure" ] && [ "${{ steps.release-final.outcome }}" == "success" ]; then
            RELEASE_CREATED="${{ steps.release-final.outputs.release_created }}"
            RELEASE_SHA="${{ steps.release-final.outputs.sha }}"
            RELEASE_TAG="${{ steps.release-final.outputs.tag_name }}"
          fi

          if [ "$RELEASE_CREATED" != "true" ]
          then
            SHA="${{ github.sha }}"
            RELEASE_CREATED="false"
            # For the extension we cannot use - but must use . for the PR number.
            DESCRIBE=$(git describe --tags --always)
            echo "describe: $DESCRIBE"
            OFFSET=$(echo $DESCRIBE | sed -n 's#.*-\([0-9]*\)-.*#\1#p')
            if [ -n "$OFFSET" ]
            then
              OFFSET=".${OFFSET}"
            fi
            if [ -z "${{ github.event.number }}" ]
            then
              TAG_NAME="v$(node -pe 'require("./.release-please-manifest.json")["."]')${OFFSET}"
            else
              TAG_NAME="v$(node -pe 'require("./.release-please-manifest.json")["."]').10000.${{ github.event.number }}"
            fi
            echo "PR: ${{ github.event.number }}"
          else
            SHA="$RELEASE_SHA"
            RELEASE_CREATED="true"
            TAG_NAME="$RELEASE_TAG"
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "pr_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "sha=$SHA" >> $GITHUB_OUTPUT
          echo "release_created=$RELEASE_CREATED" >> $GITHUB_OUTPUT
          echo "Tag: $TAG_NAME"
          echo "Sha: $SHA"
          echo "Release: $RELEASE_CREATED"

  artifacts-job:
    needs: release-please
    uses: ./.github/workflows/artifacts.yml
    secrets: inherit
    with:
      sha: ${{ needs.release-please.outputs.sha }}
      ref: ${{ github.ref }}
      tag_name: ${{ needs.release-please.outputs.tag_name }}
      release_created: ${{ needs.release-please.outputs.release_created }}
      pr_number: ${{ needs.release-please.outputs.pr_number }}
