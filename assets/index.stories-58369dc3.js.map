{"version":3,"file":"index.stories-58369dc3.js","sources":["../../src/shared/directives/custom-class-map.ts","../../src/components/lukso-button/index.ts","../../src/components/lukso-button/index.stories.ts"],"sourcesContent":["import { Directive, directive, PartInfo, PartType } from 'lit/directive.js'\n\nexport interface ClassInfoList {\n  readonly [classList: string]: boolean\n}\n\nclass CustomClassMapDirective extends Directive {\n  constructor(partInfo: PartInfo) {\n    super(partInfo)\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`customClassMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      )\n    }\n  }\n\n  render(classInfoList: ClassInfoList) {\n    return (\n      ' ' +\n      Object.keys(classInfoList)\n        .filter(key => classInfoList[key])\n        .join(' ') +\n      ' '\n    )\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n * Since build in `classMap` directive can only apply one class name,\n * this directive is allowing to apply multiple class names.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfoList` argument and adds\n * the property names to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{'foo bar': baz}` applies the class `foo bar` if the value of `baz` is\n * truthy.\n *\n * @param classInfoList\n */\nexport const customClassMap = directive(CustomClassMapDirective)\n\nexport type { CustomClassMapDirective }\n","import { html } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nimport { TailwindElement } from '../../shared/tailwind.element'\nimport { customClassMap } from '../../shared/directives/custom-class-map'\n\n@customElement('lukso-button')\nexport class LuksoButton extends TailwindElement {\n  @property({ type: String })\n  variant = 'primary'\n\n  @property({ type: Boolean })\n  disabled = false\n\n  private defaultStyles =\n    'flex justify-center items-center w-[334px] relative gap-2 px-[81px] py-3 px-6 rounded-xl border border-solid cursor-pointer'\n\n  private secondaryStyles =\n    'bg-neutral-100 border-neutral-90 text-neutral-20 disabled:bg-neutral-90 disabled:border-neutral-90 disabled:text-neutral-100'\n\n  private primaryStyles =\n    'bg-neutral-20 border-neutral-20 text-neutral-100 disabled:bg-neutral-90 disabled:border-neutral-90'\n\n  render() {\n    return html`\n      <button\n        data-testid=\"button\"\n        ?disabled=${this.disabled}\n        class=${customClassMap({\n          [this.defaultStyles]: true,\n          [this.primaryStyles]: this.variant === 'primary',\n          [this.secondaryStyles]: this.variant === 'secondary',\n        })}\n      >\n        <slot></slot>\n      </button>\n    `\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'lukso-button': LuksoButton\n  }\n}\n","import { html } from 'lit-html';\nimport { within } from '@storybook/testing-library';\nimport { expect } from '@storybook/jest';\nimport './index';\nexport default {\n  title: 'Design System/Button',\n  component: 'lukso-button'\n};\nexport function Primary({\n  variant,\n  disabled\n}) {\n  return html`<lukso-button variant=${variant} ?disabled=${disabled}\n    >Hello World</lukso-button\n  >`;\n}\nPrimary.args = {\n  variant: 'primary',\n  disabled: false\n};\nPrimary.argTypes = {\n  variant: {\n    options: ['primary', 'secondary']\n  }\n};\nPrimary.play = async ({\n  canvasElement\n}) => {\n  const canvas = within(canvasElement);\n\n  // ðŸ‘‡ Assert DOM structure\n  await expect(canvas.getByText('Hello World')).toBeInTheDocument();\n\n  // See https://storybook.js.org/docs/react/essentials/actions#automatically-matching-args to learn how to setup logging in the Actions panel\n  // await userEvent.click(canvas.getByTestId(\"button\"));\n\n  // ðŸ‘‡ Assert DOM structure\n  // await expect(\n  //   canvas.getByText(\n  //     \"Hello World\"\n  //   )\n  // ).toBeInTheDocument();\n};\nPrimary.parameters = {\n  ...Primary.parameters,\n  storySource: {\n    source: \"function Primary({\\n  variant,\\n  disabled\\n}) {\\n  return html`<lukso-button variant=${variant} ?disabled=${disabled}\\n    >Hello World</lukso-button\\n  >`;\\n}\",\n    ...Primary.parameters?.storySource\n  }\n};"],"names":["CustomClassMapDirective","Directive","partInfo","PartType","_a","classInfoList","key","customClassMap","directive","LuksoButton","TailwindElement","html","__decorateClass","property","customElement","index_stories","Primary","variant","disabled","canvasElement","canvas","within","expect"],"mappings":"gSAMA,MAAMA,UAAgCC,CAAU,CAC9C,YAAYC,EAAoB,OAG5B,GAFF,MAAMA,CAAQ,EAEZA,EAAS,OAASC,EAAS,WAC3BD,EAAS,OAAS,WACjBE,EAAAF,EAAS,UAAT,YAAAE,EAAkB,QAAoB,EAEvC,MAAM,IAAI,MACR,0GAAA,CAIN,CAEA,OAAOC,EAA8B,CACnC,MACE,IACA,OAAO,KAAKA,CAAa,EACtB,OAAcC,GAAAD,EAAcC,CAAG,CAAC,EAChC,KAAK,GAAG,EACX,GAEJ,CACF,CAkBa,MAAAC,EAAiBC,EAAUR,CAAuB,kMCzClD,IAAAS,EAAN,cAA0BC,CAAgB,CAA1C,aAAA,CAAA,MAAA,GAAA,SAAA,EAEK,KAAA,QAAA,UAGC,KAAA,SAAA,GAEX,KAAQ,cACN,8HAEF,KAAQ,gBACN,+HAEF,KAAQ,cACN,oGAAA,CAEF,QAAS,CACA,OAAAC;AAAAA;AAAAA;AAAAA,oBAGS,KAAK;AAAA,gBACTJ,EAAe,CACrB,CAAC,KAAK,aAAa,EAAG,GACtB,CAAC,KAAK,aAAa,EAAG,KAAK,UAAY,UACvC,CAAC,KAAK,eAAe,EAAG,KAAK,UAAY,WAAA,CAC1C;AAAA;AAAA;AAAA;AAAA,KAKP,CACF,EA7BEK,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,CAAA,EADfJ,EAEX,UAAA,UAAA,CAAA,EAGAG,EAAA,CADCC,EAAS,CAAE,KAAM,QAAS,CAAA,EAJhBJ,EAKX,UAAA,WAAA,CAAA,EALWA,EAANG,EAAA,CADNE,EAAc,cAAc,CAAA,EAChBL,CAAA,ECHb,MAAeM,EAAA,CACb,MAAO,uBACP,UAAW,cACb,EACO,SAASC,EAAQ,CACtB,QAAAC,EACA,SAAAC,CACF,EAAG,CACD,OAAOP,0BAA6BM,eAAqBC;AAAA;AAAA,IAG3D,CACAF,EAAQ,KAAO,CACb,QAAS,UACT,SAAU,EACZ,EACAA,EAAQ,SAAW,CACjB,QAAS,CACP,QAAS,CAAC,UAAW,WAAW,CAClC,CACF,EACAA,EAAQ,KAAO,MAAO,CACpB,cAAAG,CACF,IAAM,CACE,MAAAC,EAASC,EAAOF,CAAa,EAGnC,MAAMG,EAAOF,EAAO,UAAU,aAAa,CAAC,EAAE,mBAWhD,QACAJ,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGZ,EAAAY,EAAQ,aAAR,YAAAZ,EAAoB,WACzB,CACF"}